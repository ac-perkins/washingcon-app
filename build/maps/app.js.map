{"version":3,"sources":["app.module.js","directives/timedate-formatter.directive.js","home/home.controller.js","games/create-game.controller.js","games/edit-game.controller.js","games/game.controller.js","games/games.service.js"],"names":["appConfig","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","controllerAs","angular","module","config","$inject","directive","$filter","require","link","scope","element","attrs","ngModelController","$parsers","push","data","Date","getTime","$formatters","HomeController","$scope","$firebaseArray","$firebaseObject","EventsService","this","upcomingEvents","errorMessage","ref","currentGamesRef","games","console","log","CreateGameController","$state","$log","singleGameEvents","that","newEvent","daySelect","date","getAllEvents","selectDay","addEvent","adjHour","Number","hour","adjMinute","minute","day","getDate","month","getMonth","year","getFullYear","ampm","time","toString","createEvent","then","mytime","go","catch","err","inputListener","$","focus","attr","blur","EditSingleEventController","$stateParams","event","gameList","NavService","allGamesArray","getEventObject","id","eventObj","editEvent","editEventObject","deleteEvent","deleteEventObject","cancelEdit","GameController","deletePin","editPin","game","askEditPost","editAreYouSure","doNotEditPost","validEditCheck","askDeletePost","areYouSure","doNotDeletePost","editCheck","gameId","pin","wrongPin","adjTime","$id","$q","database","firebase","child","admin","timeWindow","orderByChild","startAt","allEvents","newGame","$add","key","$loaded","x","eventId","gameObj","obj","editedEvent","update","name","location","players","notes","$remove","factory"],"mappings":"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","file":"../src/app.js","sourcesContent":["(function() {\n    'use strict';\n\n  angular\n    .module('washingcon-app',['firebase', 'ui.router', 'ui.bootstrap', 'ngMaterial', 'ngMessages', 'angularjs-datetime-picker'])\n    .config(appConfig);\n\n  appConfig.$inject = ['$stateProvider', '$urlRouterProvider'];\n\n  function appConfig($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise('/');\n\n    $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: 'home/home.template.html',\n      controller: 'HomeController',\n      controllerAs: 'home'\n    })\n    // .state('events', {\n    //   url: '/events/:id',\n    //   templateUrl: 'events/events.template.html',\n    //   controller: 'EventsController',\n    //   controllerAs: 'events'\n    // })\n    .state('createGame', {\n      url: '/create',\n      templateUrl: 'games/create-game.template.html',\n      controller: 'CreateGameController',\n      controllerAs: 'create'\n    })\n    .state('viewGame', {\n      url: '/game/:id',\n      templateUrl: 'games/game.template.html',\n      controller: 'GameController',\n      controllerAs: 'gc'\n    });\n    // .state('editAllEvents', {\n    //   url: '/event/edit',\n    //   templateUrl: 'events/edit-all-events.template.html',\n    //   controller: 'EditEventController',\n    //   controllerAs: 'edit'\n    // });\n\n  }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .directive('timedateFormatter', function($filter) {\n        return {\n          require: 'ngModel',\n          link: function(scope, element, attrs, ngModelController) {\n            ngModelController.$parsers.push(function(data) {\n              //convert data from view format to model format\n              data = new Date(data).getTime();\n              // $filter('date')(data, \"short\");\n              return data; //converted\n            });\n\n            ngModelController.$formatters.push(function(data) {\n              //convert data from model format to view format\n              data = $filter('date')(data, \"short\");\n              // data = new Date(data).getTime();\n              return data; //converted\n            });\n          }\n        };\n      });\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .controller('HomeController', HomeController);\n\n      HomeController.$inject = ['$scope', '$firebaseArray', '$firebaseObject', 'EventsService'];\n      function HomeController($scope, $firebaseArray, $firebaseObject, EventsService) {\n\n        // var that = this;\n        this.upcomingEvents = null;\n        this.errorMessage = '';\n        this.ref = EventsService.currentGamesRef;\n        this.games = $firebaseArray(this.ref);\n        console.log(this.games);\n\n\n      }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .controller('CreateGameController', CreateGameController);\n\n    CreateGameController.$inject = ['$scope', '$state', '$log', 'EventsService'];\n    function CreateGameController($scope, $state, $log, EventsService) {\n\n      this.singleGameEvents = EventsService.singleGameEvents;\n      var that = this;\n      this.newEvent = {daySelect: '2017, 9, 9'};\n      this.newEvent.date = new Date(this.newEvent.daySelect);\n      this.errorMessage = '';\n      EventsService.getAllEvents();\n\n      this.selectDay = function selectDay() {\n        var that = this;\n        that.newEvent.date = new Date(this.newEvent.daySelect);\n      };\n\n      this.addEvent = function addEvent() {\n        // that.newEvent.time = that.newEvent.time.toString();\n        that.newEvent.adjHour = Number(that.newEvent.hour);\n        that.newEvent.adjMinute = Number(that.newEvent.minute);\n        that.newEvent.day = that.newEvent.date.getDate();\n        that.newEvent.month = that.newEvent.date.getMonth();\n        that.newEvent.year = that.newEvent.date.getFullYear();\n        if (that.newEvent.ampm === 'PM' && that.newEvent.adjHour !== 12) {\n          that.newEvent.adjHour = that.newEvent.adjHour + 12;\n        }\n        if (that.newEvent.ampm === 'AM' && that.newEvent.adjHour === 12) {\n          that.newEvent.adjHour = 0;\n        }\n\n        that.newEvent.time = new Date(that.newEvent.year, that.newEvent.month, that.newEvent.day, that.newEvent.adjHour, that.newEvent.adjMinute);\n        that.newEvent.time = that.newEvent.time.toString();\n        console.log('after string', that.newEvent.time);\n        return EventsService.createEvent(that.newEvent)\n          .then(function handlePromise(ref) {\n            console.log(that.newEvent);\n            console.log('mytime', $scope.mytime);\n            console.log('in promise', ref);\n            $state.go('home');\n          })\n          .catch(function handleError(err) {\n            console.log('catch error', err);\n            that.errorMessage = 'The server is not responding. Please try again shortly.';\n          });\n      };\n\n      this.inputListener = function inputListener() {\n        $('input').focus(function() {\n          $(this).attr('datamainplaceholder', $(this).attr('placeholder'));\n          $(this).attr('placeholder', $(this).attr('dataaltplaceholder'));\n        })\n        .blur(function() {\n          $(this).attr('dataaltplaceholder', $(this).attr('placeholder'));\n          $(this).attr('placeholder', $(this).attr('datamainplaceholder'));\n        });\n      };\n\n      this.inputListener();\n\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .controller('EditSingleEventController', EditSingleEventController);\n\n      EditSingleEventController.$inject = ['$scope', '$state', '$stateParams', 'EventsService'];\n      function EditSingleEventController($scope, $state, $stateParams, EventsService) {\n\n        var that = this;\n        this.event = null;\n        this.gameList = NavService.allGamesArray;\n        this.errorMessage = '';\n\n        // $scope.$watch('es.event.game', function editIconSrc(v){\n        //   v = v.replace(/[^\\w]+/g, '');\n        //   that.event.iconSrc = v;\n        //   console.log('$watch', that.event.iconSrc);\n        // });\n\n        EventsService.getEventObject($stateParams.id)\n          .then(function(eventObj) {\n            console.log(eventObj);\n            that.event = eventObj;\n          })\n          .catch(function(err) {\n            console.log('catch error', err);\n            that.errorMessage = 'The server is not responding. Please try again shortly.';\n          });\n\n        this.editEvent = function editEvent() {\n          console.log('that.event', this.event);\n          return EventsService.editEventObject($stateParams.id, that.event)\n            .then(function(ref) {\n              console.log('in editEvent promise', ref);\n              $state.go('editAllEvents');\n            })\n            .catch(function(err) {\n              console.log('catch error', err);\n              that.errorMessage = 'The server is not responding. Please try again shortly.';\n            });\n        };\n\n        this.deleteEvent = function deleteEvent() {\n          return EventsService.deleteEventObject($stateParams.id)\n            .then(function(ref) {\n              console.log('in deleteEvent promise', ref);\n              $state.go('home');\n            })\n            .catch(function(err) {\n              console.log('catch error', err);\n              that.errorMessage = 'The server is not responding. Please try again shortly.';\n            });\n        };\n\n        this.cancelEdit = function cancelEdit() {\n          $state.go('editAllEvents');\n        };\n\n      }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .controller('GameController', GameController);\n\n      GameController.$inject = ['$scope', '$state', '$stateParams', 'EventsService'];\n      function GameController($scope, $state, $stateParams, EventsService) {\n\n        console.log('in Game Controller');\n        var that = this;\n        this.event = null;\n        this.errorMessage = '';\n        this.deletePin = '';\n        this.editPin = '';\n\n        EventsService.getEventObject($stateParams.id)\n          .then(function(eventObj) {\n            console.log(eventObj);\n            that.game = eventObj;\n            that.game.time = new Date(eventObj.time);\n          })\n          .catch(function(err) {\n            console.log('catch error', err);\n            that.errorMessage = 'The server is not responding. Please try again shortly.';\n          });\n\n        this.cancelEdit = function cancelEdit() {\n          $state.go('editAllEvents');\n        };\n\n        this.askEditPost = function askEditPost() {\n          // this.deletePostID = postId;\n          this.editAreYouSure = true;\n        };\n\n        this.doNotEditPost = function doNotEditPost() {\n          this.editAreYouSure = false;\n          this.validEditCheck = false;\n        };\n\n        this.askDeletePost = function askDeletePost() {\n          // this.deletePostID = postId;\n          this.areYouSure = true;\n        };\n\n        this.doNotDeletePost = function doNotDeletePost() {\n          this.areYouSure = false;\n        };\n\n        this.editCheck = function editCheck(gameId, pin) {\n          if (this.editPin !== pin && this.editPin !== '8008135') {\n            this.wrongPin = 'You have entered an incorrect PIN. Please try again.';\n            console.log(\"wrong pin\", this.editPin, pin);\n          } else {\n            this.validEditCheck = true;\n          }\n        };\n\n\n        this.wrongPin = '';\n\n        this.editEvent = function editEvent(game) {\n          console.log('edit game', game);\n          game.adjHour = Number(game.hour);\n          game.adjMinute = Number(game.minute);\n          game.day = game.time.getDate();\n          game.month = game.time.getMonth();\n          game.year = game.time.getFullYear();\n          if (game.ampm === 'PM' && game.adjHour !== 12) {\n            game.adjHour = game.adjHour + 12;\n          }\n          if (game.ampm === 'AM' && game.adjHour === 12) {\n            game.adjHour = 0;\n          }\n          game.adjTime = new Date(game.year, game.month, game.day, game.adjHour, game.adjMinute);\n          game.adjTime = game.adjTime.toString();\n\n          return EventsService.editEventObject(game.$id, game)\n            .then(function(ref) {\n              // console.log('that.editAreYouSure', that.editAreYouSure);\n              that.editAreYouSure = false;\n              // console.log('that.editAreYouSure', that.editAreYouSure);\n              console.log('in editEvent promise', ref);\n              $state.go('viewGame({id: game.$id})');\n            })\n            .catch(function(err) {\n              console.log('catch error', err);\n              that.errorMessage = 'The server is not responding. Please try again shortly.';\n            });\n        };\n\n        this.deleteEvent = function deleteEvent(gameId, pin) {\n          console.log(pin);\n          if (that.deletePin !== pin && that.deletePin !== '8008135') {\n            that.wrongPin = 'You have entered an incorrect PIN. Please try again.';\n            console.log(\"wrong pin\", that.deletePin);\n          } else {\n\n          return EventsService.deleteEventObject(gameId)\n            .then(function(ref) {\n              console.log('in deleteEvent promise', ref);\n              that.deletePin = '';\n              that.areYouSure = false;\n              $state.go('home');\n            })\n            .catch(function(err) {\n              console.log('catch error', err);\n              that.errorMessage = 'The server is not responding. Please try again shortly.';\n            });\n          }\n\n        };\n\n\n      }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .factory('EventsService', EventsService);\n\n    EventsService.$inject = ['$q', '$firebaseObject', '$firebaseArray'];\n    function EventsService($q, $firebaseObject, $firebaseArray) {\n\n      var database = firebase.database().ref().child('games');  // Reference to the set of 'games' data on Firebase\n      var admin = firebase.database().ref().child('admin');\n      var timeWindow = new Date().getTime() - 1200000;  // Creates a Date object that is set 20 minutes in the past\n      var currentGamesRef = firebase.database().ref().child('games').orderByChild('time').startAt(timeWindow);  // Retrieves list of games, ordered by start time, going back 20 minutes\n      var allEvents = [];\n      var singleGameEvents = [];\n\n\n      return {\n        database: database,\n        admin: admin,\n        currentGamesRef: currentGamesRef,\n        createEvent: createEvent,\n        getAllEvents: getAllEvents,\n        // getSingleGameEvents: getSingleGameEvents,\n        getEventObject: getEventObject,\n        editEventObject: editEventObject,\n        deleteEventObject: deleteEventObject\n      };\n\n      function createEvent(newGame) {\n        newGame.time = new Date(newGame.time).getTime();\n        // newGame.time = newGame.time.toString();\n\n        return $firebaseArray(database).$add(newGame)\n          .then(function(ref) {\n            console.log('ref', ref);\n            var id = ref.key;\n            console.log(\"added record with id \" + id);\n            return id;\n          });\n      }\n\n      // function getAllEvents() {\n      //   return $firebaseArray(database).$loaded()\n      //     .then(function(x) {\n      //       allEvents = x;\n      //       console.log(allEvents);\n      //       return allEvents;\n      //     });\n      // }\n\n      function getAllEvents() {\n        return $firebaseArray(database).$loaded()\n          .then(function(x) {\n            allEvents = x;\n            // console.log(allEvents);\n            return allEvents;\n          });\n      }\n\n      // function getSingleGameEvents(game) {\n      //   singleGameEvents = [];\n      //   return $firebaseArray(events).$loaded()\n      //     .then(function(x) {\n      //       x.forEach(function findEvent(each) {\n      //         if(each.game === game) {\n      //           singleGameEvents.push(each);\n      //         }\n      //       });\n      //       return singleGameEvents;\n      //     });\n      // }\n\n      function getEventObject(eventId) {\n        var gameObj = firebase.database().ref().child(\"games/\" + eventId);\n        return $firebaseObject(gameObj).$loaded()\n          .then(function(obj) {\n            obj.time = new Date(obj.time);\n            console.log('$firebaseObject', obj);\n            return obj;\n          });\n      }\n\n      function editEventObject(eventId, editedEvent) {\n        var gameObj = firebase.database().ref().child(\"games/\" + eventId);\n        editedEvent.adjTime = new Date(editedEvent.adjTime).getTime();\n        console.log('editedEvent', editedEvent);\n        return gameObj.update(\n          {\n            name: editedEvent.name,\n            location: editedEvent.location,\n            hour: editedEvent.hour,\n            adjHour: editedEvent.adjHour,\n            minute: editedEvent.minute,\n            adjMinute: editedEvent.adjMinute,\n            day: editedEvent.day,\n            month: editedEvent.month,\n            year: editedEvent.year,\n            ampm: editedEvent.ampm,\n            time: editedEvent.adjTime, \n            players: editedEvent.players,\n            notes: editedEvent.notes || '',\n\n          })\n          .then(function() {\n            return 'success!';\n        });\n      }\n\n      function deleteEventObject(eventId) {\n        var gameObj = firebase.database().ref().child(\"games/\" + eventId);\n        return $firebaseObject(gameObj).$remove()\n          .then(function(ref) {\n            console.log(ref);\n            return ref;\n          });\n      }\n\n    }\n\n})();\n"]}