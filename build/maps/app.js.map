{"version":3,"sources":["app.module.js","directives/timedate-formatter.directive.js","games/create-game.controller.js","games/edit-game.controller.js","games/game.controller.js","games/games.service.js","home/home.controller.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CCtjjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"../src/app.js","sourcesContent":["(function() {\n    'use strict';\n\n  angular\n    .module('washingcon-app',['firebase', 'ui.router', 'ui.bootstrap', 'angularjs-datetime-picker'])\n    .config(appConfig);\n\n  appConfig.$inject = ['$stateProvider', '$urlRouterProvider'];\n\n  function appConfig($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise('/');\n\n    $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: 'home/home.template.html',\n      controller: 'HomeController',\n      controllerAs: 'home'\n    })\n    // .state('events', {\n    //   url: '/events/:id',\n    //   templateUrl: 'events/events.template.html',\n    //   controller: 'EventsController',\n    //   controllerAs: 'events'\n    // })\n    .state('createGame', {\n      url: '/create',\n      templateUrl: 'games/create-game.template.html',\n      controller: 'CreateGameController',\n      controllerAs: 'create'\n    })\n    .state('viewGame', {\n      url: '/game/:id',\n      templateUrl: 'games/game.template.html',\n      controller: 'GameController',\n      controllerAs: 'gc'\n    });\n    // .state('editAllEvents', {\n    //   url: '/event/edit',\n    //   templateUrl: 'events/edit-all-events.template.html',\n    //   controller: 'EditEventController',\n    //   controllerAs: 'edit'\n    // });\n\n  }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .directive('timedateFormatter', function($filter) {\n        return {\n          require: 'ngModel',\n          link: function(scope, element, attrs, ngModelController) {\n            ngModelController.$parsers.push(function(data) {\n              //convert data from view format to model format\n              data = new Date(data).getTime();\n              // $filter('date')(data, \"short\");\n              return data; //converted\n            });\n\n            ngModelController.$formatters.push(function(data) {\n              //convert data from model format to view format\n              data = $filter('date')(data, \"short\");\n              // data = new Date(data).getTime();\n              return data; //converted\n            });\n          }\n        };\n      });\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .controller('CreateGameController', CreateGameController);\n\n    CreateGameController.$inject = ['$scope', '$state', '$log', 'EventsService'];\n    function CreateGameController($scope, $state, $log, EventsService) {\n\n      this.singleGameEvents = EventsService.singleGameEvents;\n      var that = this;\n      this.newEvent = null;\n      this.errorMessage = '';\n      console.log('this.errorMessage');\n      console.log(EventsService.database);\n      EventsService.getAllEvents();\n\n\n      this.addEvent = function addEvent() {\n        that.newEvent.time = that.newEvent.time.toString();\n        console.log('after string', that.newEvent.time);\n        return EventsService.createEvent(that.newEvent)\n          .then(function handlePromise(ref) {\n            console.log(that.newEvent);\n            console.log('mytime', $scope.mytime);\n            console.log('in promise', ref);\n            $state.go('home');\n          })\n          .catch(function handleError(err) {\n            console.log('catch error', err);\n            that.errorMessage = 'The server is not responding. Please try again shortly.';\n          });\n      };\n\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .controller('EditSingleEventController', EditSingleEventController);\n\n      EditSingleEventController.$inject = ['$scope', '$state', '$stateParams', 'EventsService'];\n      function EditSingleEventController($scope, $state, $stateParams, EventsService) {\n\n        var that = this;\n        this.event = null;\n        this.gameList = NavService.allGamesArray;\n        this.errorMessage = '';\n\n        // $scope.$watch('es.event.game', function editIconSrc(v){\n        //   v = v.replace(/[^\\w]+/g, '');\n        //   that.event.iconSrc = v;\n        //   console.log('$watch', that.event.iconSrc);\n        // });\n\n        EventsService.getEventObject($stateParams.id)\n          .then(function(eventObj) {\n            console.log(eventObj);\n            that.event = eventObj;\n          })\n          .catch(function(err) {\n            console.log('catch error', err);\n            that.errorMessage = 'The server is not responding. Please try again shortly.';\n          });\n\n        this.editEvent = function editEvent() {\n          console.log('that.event', this.event);\n          return EventsService.editEventObject($stateParams.id, that.event)\n            .then(function(ref) {\n              console.log('in editEvent promise', ref);\n              $state.go('editAllEvents');\n            })\n            .catch(function(err) {\n              console.log('catch error', err);\n              that.errorMessage = 'The server is not responding. Please try again shortly.';\n            });\n        };\n\n        this.deleteEvent = function deleteEvent() {\n          return EventsService.deleteEventObject($stateParams.id)\n            .then(function(ref) {\n              console.log('in deleteEvent promise', ref);\n              $state.go('home');\n            })\n            .catch(function(err) {\n              console.log('catch error', err);\n              that.errorMessage = 'The server is not responding. Please try again shortly.';\n            });\n        };\n\n        this.cancelEdit = function cancelEdit() {\n          $state.go('editAllEvents');\n        };\n\n      }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .controller('GameController', GameController);\n\n      GameController.$inject = ['$scope', '$state', '$stateParams', 'EventsService'];\n      function GameController($scope, $state, $stateParams, EventsService) {\n\n        console.log('in Game Controller');\n        var that = this;\n        this.event = null;\n        this.errorMessage = '';\n        this.deletePin = '';\n        this.editPin = '';\n\n\n\n        EventsService.getEventObject($stateParams.id)\n          .then(function(eventObj) {\n            console.log(eventObj);\n            that.game = eventObj;\n          })\n          .catch(function(err) {\n            console.log('catch error', err);\n            that.errorMessage = 'The server is not responding. Please try again shortly.';\n          });\n\n        // this.editEvent = function editEvent() {\n        //   console.log('that.event', this.event);\n        //   return EventsService.editEventObject($stateParams.id, that.event)\n        //     .then(function(ref) {\n        //       console.log('in editEvent promise', ref);\n        //       $state.go('editAllEvents');\n        //     })\n        //     .catch(function(err) {\n        //       console.log('catch error', err);\n        //       that.errorMessage = 'The server is not responding. Please try again shortly.';\n        //     });\n        // };\n\n        // this.deleteEvent = function deleteEvent() {\n        //   return EventsService.deleteEventObject($stateParams.id)\n        //     .then(function(ref) {\n        //       console.log('in deleteEvent promise', ref);\n        //       $state.go('home');\n        //     })\n        //     .catch(function(err) {\n        //       console.log('catch error', err);\n        //       that.errorMessage = 'The server is not responding. Please try again shortly.';\n        //     });\n        // };\n\n        this.cancelEdit = function cancelEdit() {\n          $state.go('editAllEvents');\n        };\n\n        this.askEditPost = function askEditPost(postId) {\n          this.deletePostID = postId;\n          this.editAreYouSure = true;\n        };\n\n        this.doNotEditPost = function doNotEditPost() {\n          this.editAreYouSure = false;\n          this.validEditCheck = false;\n        };\n\n        this.askDeletePost = function askDeletePost(postId) {\n          this.deletePostID = postId;\n          this.areYouSure = true;\n        };\n\n        this.doNotDeletePost = function doNotDeletePost() {\n          this.areYouSure = false;\n        };\n\n        this.editCheck = function editCheck(gameId, pin) {\n          if (this.editPin !== pin && this.editPin !== '8008135') {\n            this.wrongPin = 'You have entered an incorrect PIN. Please try again.';\n            console.log(\"wrong pin\", this.editPin, pin);\n          } else {\n            this.validEditCheck = true;\n          }\n        };\n\n\n        this.wrongPin = '';\n\n        this.editEvent = function editEvent(game) {\n          console.log('edit game', game);\n          return EventsService.editEventObject(game.$id, game)\n            .then(function(ref) {\n              that.editAreYouSure = false;\n              console.log('in editEvent promise', ref);\n              // $state.go('editAllEvents');\n            })\n            .catch(function(err) {\n              console.log('catch error', err);\n              that.errorMessage = 'The server is not responding. Please try again shortly.';\n            });\n        };\n\n        this.deleteEvent = function deleteEvent(gameId, pin) {\n          console.log(pin);\n          if (that.deletePin !== pin && that.deletePin !== '8008135') {\n            that.wrongPin = 'You have entered an incorrect PIN. Please try again.';\n            console.log(\"wrong pin\", that.deletePin);\n          } else {\n\n          return EventsService.deleteEventObject(gameId)\n            .then(function(ref) {\n              console.log('in deleteEvent promise', ref);\n              that.deletePin = '';\n              that.areYouSure = false;\n              $state.go('home');\n            })\n            .catch(function(err) {\n              console.log('catch error', err);\n              that.errorMessage = 'The server is not responding. Please try again shortly.';\n            });\n          }\n\n        };\n\n\n      }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .factory('EventsService', EventsService);\n\n    EventsService.$inject = ['$q', '$firebaseObject', '$firebaseArray'];\n    function EventsService($q, $firebaseObject, $firebaseArray) {\n\n      var database = firebase.database().ref().child('games');  // Reference to the set of 'games' data on Firebase\n      var admin = firebase.database().ref().child('admin');\n      var timeWindow = new Date().getTime() - 1200000;  // Creates a Date object that is set 20 minutes in the past\n      var currentGamesRef = firebase.database().ref().child('games').orderByChild('time').startAt(timeWindow);  // Retrieves list of games, ordered by start time, going back 20 minutes\n      var allEvents = [];\n      var singleGameEvents = [];\n\n\n      return {\n        database: database,\n        admin: admin,\n        currentGamesRef: currentGamesRef,\n        createEvent: createEvent,\n        getAllEvents: getAllEvents,\n        // getSingleGameEvents: getSingleGameEvents,\n        getEventObject: getEventObject,\n        editEventObject: editEventObject,\n        deleteEventObject: deleteEventObject\n      };\n\n      function createEvent(newGame) {\n        newGame.time = new Date(newGame.time).getTime();\n        // newGame.time = newGame.time.toString();\n\n        return $firebaseArray(database).$add(newGame)\n          .then(function(ref) {\n            console.log('ref', ref);\n            var id = ref.key;\n            console.log(\"added record with id \" + id);\n            return id;\n          });\n      }\n\n      // function getAllEvents() {\n      //   return $firebaseArray(database).$loaded()\n      //     .then(function(x) {\n      //       allEvents = x;\n      //       console.log(allEvents);\n      //       return allEvents;\n      //     });\n      // }\n\n      function getAllEvents() {\n        return $firebaseArray(database).$loaded()\n          .then(function(x) {\n            allEvents = x;\n            console.log(allEvents);\n            return allEvents;\n          });\n      }\n\n      // function getSingleGameEvents(game) {\n      //   singleGameEvents = [];\n      //   return $firebaseArray(events).$loaded()\n      //     .then(function(x) {\n      //       x.forEach(function findEvent(each) {\n      //         if(each.game === game) {\n      //           singleGameEvents.push(each);\n      //         }\n      //       });\n      //       return singleGameEvents;\n      //     });\n      // }\n\n      function getEventObject(eventId) {\n        var gameObj = firebase.database().ref().child(\"games/\" + eventId);\n        return $firebaseObject(gameObj).$loaded()\n          .then(function(obj) {\n            console.log('$firebaseObject', obj);\n            return obj;\n          });\n      }\n\n      function editEventObject(eventId, editedEvent) {\n        var gameObj = firebase.database().ref().child(\"games/\" + eventId);\n        editedEvent.time = new Date(editedEvent.time).getTime();\n        console.log('editedEvent', editedEvent);\n        return gameObj.update(\n          {\n            name: editedEvent.name,\n            location: editedEvent.location,\n            time: editedEvent.time,\n            players: editedEvent.players,\n            notes: editedEvent.notes || '',\n\n          })\n          .then(function() {\n            return 'success!';\n        });\n      }\n\n      function deleteEventObject(eventId) {\n        var gameObj = firebase.database().ref().child(\"games/\" + eventId);\n        return $firebaseObject(gameObj).$remove()\n          .then(function(ref) {\n            console.log(ref);\n            return ref;\n          });\n      }\n\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .controller('HomeController', HomeController);\n\n      HomeController.$inject = ['$scope', '$firebaseArray', '$firebaseObject', 'EventsService'];\n      function HomeController($scope, $firebaseArray, $firebaseObject, EventsService) {\n\n        // var that = this;\n        this.upcomingEvents = null;\n        this.errorMessage = '';\n        this.ref = EventsService.currentGamesRef;\n        this.games = $firebaseArray(this.ref);\n        console.log(this.games);\n\n\n      }\n\n})();\n"]}