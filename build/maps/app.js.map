{"version":3,"sources":["app.module.js","directives/timedate-formatter.directive.js","games/create-game.controller.js","games/edit-game.controller.js","games/game.controller.js","games/games.service.js","home/home.controller.js"],"names":["appConfig","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","controllerAs","angular","module","config","$inject","directive","$filter","require","link","scope","element","attrs","ngModelController","$parsers","push","data","Date","getTime","$formatters","CreateGameController","$scope","$state","$log","EventsService","this","singleGameEvents","that","newEvent","errorMessage","getAllEvents","addEvent","time","toString","console","log","createEvent","then","ref","mytime","go","catch","err","inputListener","$","focus","attr","blur","EditSingleEventController","$stateParams","event","gameList","NavService","allGamesArray","getEventObject","id","eventObj","editEvent","editEventObject","deleteEvent","deleteEventObject","cancelEdit","GameController","deletePin","editPin","game","askEditPost","editAreYouSure","doNotEditPost","validEditCheck","askDeletePost","areYouSure","doNotDeletePost","editCheck","gameId","pin","wrongPin","$id","$q","$firebaseObject","$firebaseArray","database","firebase","child","admin","timeWindow","currentGamesRef","orderByChild","startAt","allEvents","newGame","$add","key","$loaded","x","eventId","gameObj","obj","editedEvent","update","name","location","players","notes","$remove","factory","HomeController","upcomingEvents","games"],"mappings":"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","file":"../app/app.js","sourcesContent":["(function() {\n    'use strict';\n\n  angular\n    .module('washingcon-app',['firebase', 'ui.router', 'ui.bootstrap', 'angularjs-datetime-picker'])\n    .config(appConfig);\n\n  appConfig.$inject = ['$stateProvider', '$urlRouterProvider'];\n\n  function appConfig($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise('/');\n\n    $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: 'home/home.template.html',\n      controller: 'HomeController',\n      controllerAs: 'home'\n    })\n    // .state('events', {\n    //   url: '/events/:id',\n    //   templateUrl: 'events/events.template.html',\n    //   controller: 'EventsController',\n    //   controllerAs: 'events'\n    // })\n    .state('createGame', {\n      url: '/create',\n      templateUrl: 'games/create-game.template.html',\n      controller: 'CreateGameController',\n      controllerAs: 'create'\n    })\n    .state('viewGame', {\n      url: '/game/:id',\n      templateUrl: 'games/game.template.html',\n      controller: 'GameController',\n      controllerAs: 'gc'\n    });\n    // .state('editAllEvents', {\n    //   url: '/event/edit',\n    //   templateUrl: 'events/edit-all-events.template.html',\n    //   controller: 'EditEventController',\n    //   controllerAs: 'edit'\n    // });\n\n  }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .directive('timedateFormatter', function($filter) {\n        return {\n          require: 'ngModel',\n          link: function(scope, element, attrs, ngModelController) {\n            ngModelController.$parsers.push(function(data) {\n              //convert data from view format to model format\n              data = new Date(data).getTime();\n              // $filter('date')(data, \"short\");\n              return data; //converted\n            });\n\n            ngModelController.$formatters.push(function(data) {\n              //convert data from model format to view format\n              data = $filter('date')(data, \"short\");\n              // data = new Date(data).getTime();\n              return data; //converted\n            });\n          }\n        };\n      });\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .controller('CreateGameController', CreateGameController);\n\n    CreateGameController.$inject = ['$scope', '$state', '$log', 'EventsService'];\n    function CreateGameController($scope, $state, $log, EventsService) {\n\n      this.singleGameEvents = EventsService.singleGameEvents;\n      var that = this;\n      this.newEvent = null;\n      this.errorMessage = '';\n      // console.log('this.errorMessage');\n      // console.log(EventsService.database);\n      EventsService.getAllEvents();\n\n\n      this.addEvent = function addEvent() {\n        that.newEvent.time = that.newEvent.time.toString();\n        console.log('after string', that.newEvent.time);\n        return EventsService.createEvent(that.newEvent)\n          .then(function handlePromise(ref) {\n            console.log(that.newEvent);\n            console.log('mytime', $scope.mytime);\n            console.log('in promise', ref);\n            $state.go('home');\n          })\n          .catch(function handleError(err) {\n            console.log('catch error', err);\n            that.errorMessage = 'The server is not responding. Please try again shortly.';\n          });\n      };\n\n      this.inputListener = function inputListener() {\n        $('input').focus(function() {\n          $(this).attr('datamainplaceholder', $(this).attr('placeholder'));\n          $(this).attr('placeholder', $(this).attr('dataaltplaceholder'));\n        })\n        .blur(function() {\n          $(this).attr('dataaltplaceholder', $(this).attr('placeholder'));\n          $(this).attr('placeholder', $(this).attr('datamainplaceholder'));\n        });\n      };\n\n      this.inputListener();\n\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .controller('EditSingleEventController', EditSingleEventController);\n\n      EditSingleEventController.$inject = ['$scope', '$state', '$stateParams', 'EventsService'];\n      function EditSingleEventController($scope, $state, $stateParams, EventsService) {\n\n        var that = this;\n        this.event = null;\n        this.gameList = NavService.allGamesArray;\n        this.errorMessage = '';\n\n        // $scope.$watch('es.event.game', function editIconSrc(v){\n        //   v = v.replace(/[^\\w]+/g, '');\n        //   that.event.iconSrc = v;\n        //   console.log('$watch', that.event.iconSrc);\n        // });\n\n        EventsService.getEventObject($stateParams.id)\n          .then(function(eventObj) {\n            console.log(eventObj);\n            that.event = eventObj;\n          })\n          .catch(function(err) {\n            console.log('catch error', err);\n            that.errorMessage = 'The server is not responding. Please try again shortly.';\n          });\n\n        this.editEvent = function editEvent() {\n          console.log('that.event', this.event);\n          return EventsService.editEventObject($stateParams.id, that.event)\n            .then(function(ref) {\n              console.log('in editEvent promise', ref);\n              $state.go('editAllEvents');\n            })\n            .catch(function(err) {\n              console.log('catch error', err);\n              that.errorMessage = 'The server is not responding. Please try again shortly.';\n            });\n        };\n\n        this.deleteEvent = function deleteEvent() {\n          return EventsService.deleteEventObject($stateParams.id)\n            .then(function(ref) {\n              console.log('in deleteEvent promise', ref);\n              $state.go('home');\n            })\n            .catch(function(err) {\n              console.log('catch error', err);\n              that.errorMessage = 'The server is not responding. Please try again shortly.';\n            });\n        };\n\n        this.cancelEdit = function cancelEdit() {\n          $state.go('editAllEvents');\n        };\n\n      }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .controller('GameController', GameController);\n\n      GameController.$inject = ['$scope', '$state', '$stateParams', 'EventsService'];\n      function GameController($scope, $state, $stateParams, EventsService) {\n\n        console.log('in Game Controller');\n        var that = this;\n        this.event = null;\n        this.errorMessage = '';\n        this.deletePin = '';\n        this.editPin = '';\n\n        EventsService.getEventObject($stateParams.id)\n          .then(function(eventObj) {\n            console.log(eventObj);\n            that.game = eventObj;\n          })\n          .catch(function(err) {\n            console.log('catch error', err);\n            that.errorMessage = 'The server is not responding. Please try again shortly.';\n          });\n\n        this.cancelEdit = function cancelEdit() {\n          $state.go('editAllEvents');\n        };\n\n        this.askEditPost = function askEditPost() {\n          // this.deletePostID = postId;\n          this.editAreYouSure = true;\n        };\n\n        this.doNotEditPost = function doNotEditPost() {\n          this.editAreYouSure = false;\n          this.validEditCheck = false;\n        };\n\n        this.askDeletePost = function askDeletePost() {\n          // this.deletePostID = postId;\n          this.areYouSure = true;\n        };\n\n        this.doNotDeletePost = function doNotDeletePost() {\n          this.areYouSure = false;\n        };\n\n        this.editCheck = function editCheck(gameId, pin) {\n          if (this.editPin !== pin && this.editPin !== '8008135') {\n            this.wrongPin = 'You have entered an incorrect PIN. Please try again.';\n            console.log(\"wrong pin\", this.editPin, pin);\n          } else {\n            this.validEditCheck = true;\n          }\n        };\n\n\n        this.wrongPin = '';\n\n        this.editEvent = function editEvent(game) {\n          console.log('edit game', game);\n          return EventsService.editEventObject(game.$id, game)\n            .then(function(ref) {\n              // console.log('that.editAreYouSure', that.editAreYouSure);\n              that.editAreYouSure = false;\n              // console.log('that.editAreYouSure', that.editAreYouSure);\n              console.log('in editEvent promise', ref);\n              $state.go('viewGame({id: game.$id})');\n            })\n            .catch(function(err) {\n              console.log('catch error', err);\n              that.errorMessage = 'The server is not responding. Please try again shortly.';\n            });\n        };\n\n        this.deleteEvent = function deleteEvent(gameId, pin) {\n          console.log(pin);\n          if (that.deletePin !== pin && that.deletePin !== '8008135') {\n            that.wrongPin = 'You have entered an incorrect PIN. Please try again.';\n            console.log(\"wrong pin\", that.deletePin);\n          } else {\n\n          return EventsService.deleteEventObject(gameId)\n            .then(function(ref) {\n              console.log('in deleteEvent promise', ref);\n              that.deletePin = '';\n              that.areYouSure = false;\n              $state.go('home');\n            })\n            .catch(function(err) {\n              console.log('catch error', err);\n              that.errorMessage = 'The server is not responding. Please try again shortly.';\n            });\n          }\n\n        };\n\n\n      }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .factory('EventsService', EventsService);\n\n    EventsService.$inject = ['$q', '$firebaseObject', '$firebaseArray'];\n    function EventsService($q, $firebaseObject, $firebaseArray) {\n\n      var database = firebase.database().ref().child('games');  // Reference to the set of 'games' data on Firebase\n      var admin = firebase.database().ref().child('admin');\n      var timeWindow = new Date().getTime() - 1200000;  // Creates a Date object that is set 20 minutes in the past\n      var currentGamesRef = firebase.database().ref().child('games').orderByChild('time').startAt(timeWindow);  // Retrieves list of games, ordered by start time, going back 20 minutes\n      var allEvents = [];\n      var singleGameEvents = [];\n\n\n      return {\n        database: database,\n        admin: admin,\n        currentGamesRef: currentGamesRef,\n        createEvent: createEvent,\n        getAllEvents: getAllEvents,\n        // getSingleGameEvents: getSingleGameEvents,\n        getEventObject: getEventObject,\n        editEventObject: editEventObject,\n        deleteEventObject: deleteEventObject\n      };\n\n      function createEvent(newGame) {\n        newGame.time = new Date(newGame.time).getTime();\n        // newGame.time = newGame.time.toString();\n\n        return $firebaseArray(database).$add(newGame)\n          .then(function(ref) {\n            console.log('ref', ref);\n            var id = ref.key;\n            console.log(\"added record with id \" + id);\n            return id;\n          });\n      }\n\n      // function getAllEvents() {\n      //   return $firebaseArray(database).$loaded()\n      //     .then(function(x) {\n      //       allEvents = x;\n      //       console.log(allEvents);\n      //       return allEvents;\n      //     });\n      // }\n\n      function getAllEvents() {\n        return $firebaseArray(database).$loaded()\n          .then(function(x) {\n            allEvents = x;\n            // console.log(allEvents);\n            return allEvents;\n          });\n      }\n\n      // function getSingleGameEvents(game) {\n      //   singleGameEvents = [];\n      //   return $firebaseArray(events).$loaded()\n      //     .then(function(x) {\n      //       x.forEach(function findEvent(each) {\n      //         if(each.game === game) {\n      //           singleGameEvents.push(each);\n      //         }\n      //       });\n      //       return singleGameEvents;\n      //     });\n      // }\n\n      function getEventObject(eventId) {\n        var gameObj = firebase.database().ref().child(\"games/\" + eventId);\n        return $firebaseObject(gameObj).$loaded()\n          .then(function(obj) {\n            console.log('$firebaseObject', obj);\n            return obj;\n          });\n      }\n\n      function editEventObject(eventId, editedEvent) {\n        var gameObj = firebase.database().ref().child(\"games/\" + eventId);\n        editedEvent.time = new Date(editedEvent.time).getTime();\n        console.log('editedEvent', editedEvent);\n        return gameObj.update(\n          {\n            name: editedEvent.name,\n            location: editedEvent.location,\n            time: editedEvent.time,\n            players: editedEvent.players,\n            notes: editedEvent.notes || '',\n\n          })\n          .then(function() {\n            return 'success!';\n        });\n      }\n\n      function deleteEventObject(eventId) {\n        var gameObj = firebase.database().ref().child(\"games/\" + eventId);\n        return $firebaseObject(gameObj).$remove()\n          .then(function(ref) {\n            console.log(ref);\n            return ref;\n          });\n      }\n\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .controller('HomeController', HomeController);\n\n      HomeController.$inject = ['$scope', '$firebaseArray', '$firebaseObject', 'EventsService'];\n      function HomeController($scope, $firebaseArray, $firebaseObject, EventsService) {\n\n        // var that = this;\n        this.upcomingEvents = null;\n        this.errorMessage = '';\n        this.ref = EventsService.currentGamesRef;\n        this.games = $firebaseArray(this.ref);\n        console.log(this.games);\n\n\n      }\n\n})();\n"]}