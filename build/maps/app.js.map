{"version":3,"sources":["app.module.js","directives/timedate-formatter.directive.js","games/create-game.controller.js","games/edit-game.controller.js","games/game.controller.js","games/games.service.js","home/home.controller.js"],"names":["appConfig","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","controllerAs","angular","module","config","$inject","directive","$filter","require","link","scope","element","attrs","ngModelController","$parsers","push","data","Date","getTime","$formatters","CreateGameController","$scope","$state","$log","EventsService","this","singleGameEvents","that","newEvent","date","errorMessage","console","log","database","getAllEvents","addEvent","adjHour","Number","hour","adjMinute","minute","day","getDate","month","getMonth","year","getFullYear","ampm","time","toString","createEvent","then","ref","mytime","go","catch","err","EditSingleEventController","$stateParams","event","gameList","NavService","allGamesArray","getEventObject","id","eventObj","editEvent","editEventObject","deleteEvent","deleteEventObject","cancelEdit","GameController","deletePin","editPin","game","askEditPost","editAreYouSure","doNotEditPost","validEditCheck","askDeletePost","areYouSure","doNotDeletePost","editCheck","gameId","pin","wrongPin","adjTime","$id","$q","$firebaseObject","$firebaseArray","firebase","child","admin","timeWindow","currentGamesRef","orderByChild","startAt","allEvents","newGame","$add","key","$loaded","x","eventId","gameObj","obj","editedEvent","update","name","location","players","notes","$remove","factory","HomeController","upcomingEvents","games"],"mappings":"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","file":"../app/app.js","sourcesContent":["(function() {\n    'use strict';\n\n  angular\n    .module('washingcon-app',['firebase', 'ui.router', 'ui.bootstrap', 'ngMaterial', 'ngMessages', 'angularjs-datetime-picker'])\n    .config(appConfig);\n\n  appConfig.$inject = ['$stateProvider', '$urlRouterProvider'];\n\n  function appConfig($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise('/');\n\n    $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: 'home/home.template.html',\n      controller: 'HomeController',\n      controllerAs: 'home'\n    })\n    // .state('events', {\n    //   url: '/events/:id',\n    //   templateUrl: 'events/events.template.html',\n    //   controller: 'EventsController',\n    //   controllerAs: 'events'\n    // })\n    .state('createGame', {\n      url: '/create',\n      templateUrl: 'games/create-game.template.html',\n      controller: 'CreateGameController',\n      controllerAs: 'create'\n    })\n    .state('viewGame', {\n      url: '/game/:id',\n      templateUrl: 'games/game.template.html',\n      controller: 'GameController',\n      controllerAs: 'gc'\n    });\n    // .state('editAllEvents', {\n    //   url: '/event/edit',\n    //   templateUrl: 'events/edit-all-events.template.html',\n    //   controller: 'EditEventController',\n    //   controllerAs: 'edit'\n    // });\n\n  }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .directive('timedateFormatter', function($filter) {\n        return {\n          require: 'ngModel',\n          link: function(scope, element, attrs, ngModelController) {\n            ngModelController.$parsers.push(function(data) {\n              //convert data from view format to model format\n              data = new Date(data).getTime();\n              // $filter('date')(data, \"short\");\n              return data; //converted\n            });\n\n            ngModelController.$formatters.push(function(data) {\n              //convert data from model format to view format\n              data = $filter('date')(data, \"short\");\n              // data = new Date(data).getTime();\n              return data; //converted\n            });\n          }\n        };\n      });\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .controller('CreateGameController', CreateGameController);\n\n    CreateGameController.$inject = ['$scope', '$state', '$log', 'EventsService'];\n    function CreateGameController($scope, $state, $log, EventsService) {\n\n      this.singleGameEvents = EventsService.singleGameEvents;\n      var that = this;\n      this.newEvent = {};\n      this.newEvent.date = new Date();\n      this.errorMessage = '';\n      console.log('this.errorMessage');\n      console.log(EventsService.database);\n      EventsService.getAllEvents();\n\n\n      this.addEvent = function addEvent() {\n        // that.newEvent.time = that.newEvent.time.toString();\n        that.newEvent.adjHour = Number(that.newEvent.hour);\n        that.newEvent.adjMinute = Number(that.newEvent.minute);\n        that.newEvent.day = that.newEvent.date.getDate();\n        that.newEvent.month = that.newEvent.date.getMonth();\n        that.newEvent.year = that.newEvent.date.getFullYear();\n        if (that.newEvent.ampm === 'PM' && that.newEvent.adjHour !== 12) {\n          that.newEvent.adjHour = that.newEvent.adjHour + 12;\n        }\n        if (that.newEvent.ampm === 'AM' && that.newEvent.adjHour === 12) {\n          that.newEvent.adjHour = 0;\n        }\n\n        that.newEvent.time = new Date(that.newEvent.year, that.newEvent.month, that.newEvent.day, that.newEvent.adjHour, that.newEvent.adjMinute);\n        that.newEvent.time = that.newEvent.time.toString();\n        console.log('after string', that.newEvent.time);\n        return EventsService.createEvent(that.newEvent)\n          .then(function handlePromise(ref) {\n            console.log(that.newEvent);\n            console.log('mytime', $scope.mytime);\n            console.log('in promise', ref);\n            $state.go('home');\n          })\n          .catch(function handleError(err) {\n            console.log('catch error', err);\n            that.errorMessage = 'The server is not responding. Please try again shortly.';\n          });\n      };\n\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .controller('EditSingleEventController', EditSingleEventController);\n\n      EditSingleEventController.$inject = ['$scope', '$state', '$stateParams', 'EventsService'];\n      function EditSingleEventController($scope, $state, $stateParams, EventsService) {\n\n        var that = this;\n        this.event = null;\n        this.gameList = NavService.allGamesArray;\n        this.errorMessage = '';\n\n        // $scope.$watch('es.event.game', function editIconSrc(v){\n        //   v = v.replace(/[^\\w]+/g, '');\n        //   that.event.iconSrc = v;\n        //   console.log('$watch', that.event.iconSrc);\n        // });\n\n        EventsService.getEventObject($stateParams.id)\n          .then(function(eventObj) {\n            console.log(eventObj);\n            that.event = eventObj;\n          })\n          .catch(function(err) {\n            console.log('catch error', err);\n            that.errorMessage = 'The server is not responding. Please try again shortly.';\n          });\n\n        this.editEvent = function editEvent() {\n          console.log('that.event', this.event);\n          return EventsService.editEventObject($stateParams.id, that.event)\n            .then(function(ref) {\n              console.log('in editEvent promise', ref);\n              $state.go('editAllEvents');\n            })\n            .catch(function(err) {\n              console.log('catch error', err);\n              that.errorMessage = 'The server is not responding. Please try again shortly.';\n            });\n        };\n\n        this.deleteEvent = function deleteEvent() {\n          return EventsService.deleteEventObject($stateParams.id)\n            .then(function(ref) {\n              console.log('in deleteEvent promise', ref);\n              $state.go('home');\n            })\n            .catch(function(err) {\n              console.log('catch error', err);\n              that.errorMessage = 'The server is not responding. Please try again shortly.';\n            });\n        };\n\n        this.cancelEdit = function cancelEdit() {\n          $state.go('editAllEvents');\n        };\n\n      }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .controller('GameController', GameController);\n\n      GameController.$inject = ['$scope', '$state', '$stateParams', 'EventsService'];\n      function GameController($scope, $state, $stateParams, EventsService) {\n\n        console.log('in Game Controller');\n        var that = this;\n        this.event = null;\n        this.errorMessage = '';\n        this.deletePin = '';\n        this.editPin = '';\n\n        EventsService.getEventObject($stateParams.id)\n          .then(function(eventObj) {\n            console.log(eventObj);\n\n            that.game = eventObj;\n            that.game.time = new Date(eventObj.time);\n          })\n          .catch(function(err) {\n            console.log('catch error', err);\n            that.errorMessage = 'The server is not responding. Please try again shortly.';\n          });\n\n        this.cancelEdit = function cancelEdit() {\n          $state.go('editAllEvents');\n        };\n\n        this.askEditPost = function askEditPost() {\n          // this.deletePostID = postId;\n          this.editAreYouSure = true;\n        };\n\n        this.doNotEditPost = function doNotEditPost() {\n          this.editAreYouSure = false;\n          this.validEditCheck = false;\n        };\n\n        this.askDeletePost = function askDeletePost() {\n          // this.deletePostID = postId;\n          this.areYouSure = true;\n        };\n\n        this.doNotDeletePost = function doNotDeletePost() {\n          this.areYouSure = false;\n        };\n\n        this.editCheck = function editCheck(gameId, pin) {\n          if (this.editPin !== pin && this.editPin !== '8008135') {\n            this.wrongPin = 'You have entered an incorrect PIN. Please try again.';\n            console.log(\"wrong pin\", this.editPin, pin);\n          } else {\n            this.validEditCheck = true;\n          }\n        };\n\n\n        this.wrongPin = '';\n\n        this.editEvent = function editEvent(game) {\n          console.log('edit game', game);\n          game.adjHour = Number(game.hour);\n          game.adjMinute = Number(game.minute);\n          game.day = game.time.getDate();\n          game.month = game.time.getMonth();\n          game.year = game.time.getFullYear();\n          if (game.ampm === 'PM' && game.adjHour !== 12) {\n            game.adjHour = game.adjHour + 12;\n          }\n          if (game.ampm === 'AM' && game.adjHour === 12) {\n            game.adjHour = 0;\n          }\n\n          game.adjTime = new Date(game.year, game.month, game.day, game.adjHour, game.adjMinute);\n          game.adjTime = game.adjTime.toString();\n\n          return EventsService.editEventObject(game.$id, game)\n            .then(function(ref) {\n              // console.log('that.editAreYouSure', that.editAreYouSure);\n              that.editAreYouSure = false;\n              // console.log('that.editAreYouSure', that.editAreYouSure);\n              console.log('in editEvent promise', ref);\n              $state.go('viewGame({id: game.$id})');\n            })\n            .catch(function(err) {\n              console.log('catch error', err);\n              that.errorMessage = 'The server is not responding. Please try again shortly.';\n            });\n        };\n\n        this.deleteEvent = function deleteEvent(gameId, pin) {\n          console.log(pin);\n          if (that.deletePin !== pin && that.deletePin !== '8008135') {\n            that.wrongPin = 'You have entered an incorrect PIN. Please try again.';\n            console.log(\"wrong pin\", that.deletePin);\n          } else {\n\n          return EventsService.deleteEventObject(gameId)\n            .then(function(ref) {\n              console.log('in deleteEvent promise', ref);\n              that.deletePin = '';\n              that.areYouSure = false;\n              $state.go('home');\n            })\n            .catch(function(err) {\n              console.log('catch error', err);\n              that.errorMessage = 'The server is not responding. Please try again shortly.';\n            });\n          }\n\n        };\n\n\n      }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .factory('EventsService', EventsService);\n\n    EventsService.$inject = ['$q', '$firebaseObject', '$firebaseArray'];\n    function EventsService($q, $firebaseObject, $firebaseArray) {\n\n      var database = firebase.database().ref().child('games');  // Reference to the set of 'games' data on Firebase\n      var admin = firebase.database().ref().child('admin');\n      var timeWindow = new Date().getTime() - 1200000;  // Creates a Date object that is set 20 minutes in the past\n      var currentGamesRef = firebase.database().ref().child('games').orderByChild('time').startAt(timeWindow);  // Retrieves list of games, ordered by start time, going back 20 minutes\n      var allEvents = [];\n      var singleGameEvents = [];\n\n\n      return {\n        database: database,\n        admin: admin,\n        currentGamesRef: currentGamesRef,\n        createEvent: createEvent,\n        getAllEvents: getAllEvents,\n        // getSingleGameEvents: getSingleGameEvents,\n        getEventObject: getEventObject,\n        editEventObject: editEventObject,\n        deleteEventObject: deleteEventObject\n      };\n\n      function createEvent(newGame) {\n        newGame.time = new Date(newGame.time).getTime();\n        // newGame.time = newGame.time.toString();\n\n        return $firebaseArray(database).$add(newGame)\n          .then(function(ref) {\n            console.log('ref', ref);\n            var id = ref.key;\n            console.log(\"added record with id \" + id);\n            return id;\n          });\n      }\n\n      // function getAllEvents() {\n      //   return $firebaseArray(database).$loaded()\n      //     .then(function(x) {\n      //       allEvents = x;\n      //       console.log(allEvents);\n      //       return allEvents;\n      //     });\n      // }\n\n      function getAllEvents() {\n        return $firebaseArray(database).$loaded()\n          .then(function(x) {\n            allEvents = x;\n            console.log(allEvents);\n            return allEvents;\n          });\n      }\n\n      // function getSingleGameEvents(game) {\n      //   singleGameEvents = [];\n      //   return $firebaseArray(events).$loaded()\n      //     .then(function(x) {\n      //       x.forEach(function findEvent(each) {\n      //         if(each.game === game) {\n      //           singleGameEvents.push(each);\n      //         }\n      //       });\n      //       return singleGameEvents;\n      //     });\n      // }\n\n      function getEventObject(eventId) {\n        var gameObj = firebase.database().ref().child(\"games/\" + eventId);\n        return $firebaseObject(gameObj).$loaded()\n          .then(function(obj) {\n            obj.time = new Date(obj.time);\n            console.log('$firebaseObject', obj);\n            return obj;\n          });\n      }\n\n      function editEventObject(eventId, editedEvent) {\n        var gameObj = firebase.database().ref().child(\"games/\" + eventId);\n        editedEvent.adjTime = new Date(editedEvent.adjTime).getTime();\n        console.log('editedEvent', editedEvent);\n        return gameObj.update(\n          {\n            name: editedEvent.name,\n            location: editedEvent.location,\n            hour: editedEvent.hour,\n            adjHour: editedEvent.adjHour,\n            minute: editedEvent.minute,\n            adjMinute: editedEvent.adjMinute,\n            day: editedEvent.day,\n            month: editedEvent.month,\n            year: editedEvent.year,\n            ampm: editedEvent.ampm,\n            time: editedEvent.adjTime,\n            players: editedEvent.players,\n            notes: editedEvent.notes || '',\n\n          })\n          .then(function() {\n            return 'success!';\n        });\n      }\n\n      function deleteEventObject(eventId) {\n        var gameObj = firebase.database().ref().child(\"games/\" + eventId);\n        return $firebaseObject(gameObj).$remove()\n          .then(function(ref) {\n            console.log(ref);\n            return ref;\n          });\n      }\n\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n      .module('washingcon-app')\n      .controller('HomeController', HomeController);\n\n      HomeController.$inject = ['$scope', '$firebaseArray', '$firebaseObject', 'EventsService'];\n      function HomeController($scope, $firebaseArray, $firebaseObject, EventsService) {\n\n        // var that = this;\n        this.upcomingEvents = null;\n        this.errorMessage = '';\n        this.ref = EventsService.currentGamesRef;\n        this.games = $firebaseArray(this.ref);\n        console.log(this.games);\n\n\n      }\n\n})();\n"]}